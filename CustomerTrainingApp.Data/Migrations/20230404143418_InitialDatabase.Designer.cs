// <auto-generated />
using System;
using CustomerTrainingApp.Data.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace CustomerTrainingApp.Data.Migrations
{
    [DbContext(typeof(CustomerTrainingDataContext))]
    [Migration("20230404143418_InitialDatabase")]
    partial class InitialDatabase
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CustomerTrainingApp.Data.Models.Employee", b =>
                {
                    b.Property<int?>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int?>("EmployeeId"));

                    b.Property<string>("Agency_Code")
                        .HasColumnType("text");

                    b.Property<string>("Education_Level")
                        .HasColumnType("text");

                    b.Property<string>("First_Name")
                        .HasColumnType("text");

                    b.Property<int?>("Grade")
                        .HasColumnType("integer");

                    b.Property<string>("Home_Address")
                        .HasColumnType("text");

                    b.Property<string>("Home_Telephone")
                        .HasColumnType("text");

                    b.Property<bool?>("IsSpecialAccomodationNeeded")
                        .HasColumnType("boolean");

                    b.Property<string>("Last_Name")
                        .HasColumnType("text");

                    b.Property<string>("Middle_Initial")
                        .HasColumnType("text");

                    b.Property<string>("Office_Telephone")
                        .HasColumnType("text");

                    b.Property<string>("Organization_Mailing_Address")
                        .HasColumnType("text");

                    b.Property<string>("Pay_Plan")
                        .HasColumnType("text");

                    b.Property<string>("Position_Level")
                        .HasColumnType("text");

                    b.Property<string>("Position_Title")
                        .HasColumnType("text");

                    b.Property<int?>("Series")
                        .HasColumnType("integer");

                    b.Property<string>("SpecialAccomodation_Details")
                        .HasColumnType("text");

                    b.Property<int?>("Step")
                        .HasColumnType("integer");

                    b.Property<string>("Work_Email_Address")
                        .HasColumnType("text");

                    b.HasKey("EmployeeId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("CustomerTrainingApp.Data.Models.Request", b =>
                {
                    b.Property<int?>("RequestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int?>("RequestId"));

                    b.Property<DateTime?>("Continued_Service_Agreement_ExpirationDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("CourseId")
                        .HasColumnType("integer");

                    b.Property<string>("CourseName")
                        .HasColumnType("text");

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("integer");

                    b.Property<string>("Individual_or_Group_Training")
                        .HasColumnType("text");

                    b.Property<string>("Skill_Learning_Objective")
                        .HasColumnType("text");

                    b.Property<string>("Student_Membership_ID")
                        .HasColumnType("text");

                    b.Property<int?>("Training_AccreditionIndicator")
                        .HasColumnType("integer");

                    b.Property<int?>("Training_Credit")
                        .HasColumnType("integer");

                    b.Property<int?>("Training_CreditTypeCode")
                        .HasColumnType("integer");

                    b.Property<int?>("Training_DeliveryTypeCode")
                        .HasColumnType("integer");

                    b.Property<int?>("Training_DesignationTypeCode")
                        .HasColumnType("integer");

                    b.Property<int?>("Training_DutyHours")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("Training_EndDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("Training_NonDutyHours")
                        .HasColumnType("integer");

                    b.Property<string>("Training_PurposeType")
                        .HasColumnType("text");

                    b.Property<int?>("Training_Source_TypeCode")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("Training_StartDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("Training_SubTypeCode")
                        .HasColumnType("integer");

                    b.Property<int?>("Training_TypeCode")
                        .HasColumnType("integer");

                    b.Property<int?>("VendorId")
                        .HasColumnType("integer");

                    b.Property<string>("Vendor_Email_Address")
                        .HasColumnType("text");

                    b.Property<string>("Vendor_Mailing_Address")
                        .HasColumnType("text");

                    b.Property<string>("Vendor_Name")
                        .HasColumnType("text");

                    b.Property<string>("Vendor_POC")
                        .HasColumnType("text");

                    b.Property<string>("Vendor_Telephone_Number")
                        .HasColumnType("text");

                    b.Property<string>("Vendor_Website")
                        .HasColumnType("text");

                    b.HasKey("RequestId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Requests");
                });

            modelBuilder.Entity("CustomerTrainingApp.Data.Models.Request", b =>
                {
                    b.HasOne("CustomerTrainingApp.Data.Models.Employee", null)
                        .WithMany("Requests")
                        .HasForeignKey("EmployeeId");
                });

            modelBuilder.Entity("CustomerTrainingApp.Data.Models.Employee", b =>
                {
                    b.Navigation("Requests");
                });
#pragma warning restore 612, 618
        }
    }
}
